<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      autoReload="true"
      internalLogLevel="Warn"
      internalLogFile="${appsetting:SavePath}\NLog\Internal\${date:format=yyyy-MM}\internal-nlog-${shortdate}.log">

  <!-- Load the ASP.NET Core plugin -->
  <extensions>
    <add assembly="NLog.Web.AspNetCore"/>
    <add asembly="NLog.Extended" />
  </extensions>

  <!-- the targets to write to -->
  <targets>
    <!-- 
    BufferingWrapper Tutorial
    BufferingWrapper stores messages and then writes them all out either synchronously or asynchronosly
    If the number of messages in the buffer reaches bufferSize, they are written to the target SYNCHRONOUSLY (Important - buffersize should be high)
    If the flushTimeout is hit, all messages in the buffer are written asynchronously
    If slidingTimeout is True, then the flushTimeout timer restarts with most recent write to the buffer. If it is False, it starts at the first write.
    -->
    <!--
    Setting bufferSize to 100, but flushTimeout to 10 seconds (10000ms). 
    -->
    <target xsi:type="BufferingWrapper" name="bufferedWrapper_JsonGlobalAsax" bufferSize="100" flushTimeout="1000" slidingTimeout="false">
      <target xsi:type="File" name="jsonGlobalAsax" fileName="${appsetting:SavePath}/Scalyr/LegacyWS/${date:format=yyyy-MM}/${date:format=dd}/${aspnet-item:variable=RequestID}.log">
        <layout xsi:type="JsonLayout" includeAllProperties="true">
          <attribute name="CorrelationID" layout="${aspnet-item:variable=CorrelationID}" />
          <attribute name="RequestID" layout="${aspnet-item:variable=RequestID}" />
          <attribute name="time" layout="${longdate}" />
          <attribute name="ClientIP" layout="${aspnet-Request-IP}" />
          <attribute name="RequestedURL" layout="${aspnet-request-url:IncludeQueryString=true}" />
          <attribute name="application" layout="${iis-site-name}"/>
          <attribute name="environment" layout="${appsetting:ENV}" />
          <!-- Note that includeAllProperties="true" will log all properties, which should include incoming headers and request body -->
        </layout>
      </target>
    </target>

    <target xsi:type="BufferingWrapper" name="bufferedWrapper_JsonLogger" bufferSize="100" flushTimeout="1000" slidingTimeout="false">
      <target xsi:type="File" name="jsonLogger" fileName="${appsetting:SavePath}/Scalyr/LegacyWS/${date:format=yyyy-MM}/${date:format=dd}/${aspnet-item:variable=RequestID}.log">
        <layout xsi:type="JsonLayout" includeAllProperties="true">
          <attribute name="CorrelationID" layout="${aspnet-item:variable=CorrelationID}" />
          <attribute name="RequestID" layout="${aspnet-item:variable=RequestID}" />
          <attribute name="time" layout="${longdate}" />
          <attribute name="logger" layout="${logger}" />
          <attribute name="level" layout="${uppercase:${level}}" />
          <attribute name="message" layout="${message}" />
          <attribute name="exception" layout="${exception:format=tostring}" />
          <!-- Note that includeAllProperties="true" will log all properties -->
        </layout>
      </target>
    </target>

    <!-- write to the void aka just remove -->
    <target xsi:type="Null" name="blackhole" />
  </targets>

  <!-- rules to map from logger name to target -->
  <rules>
    <!--Skip Microsoft logs and so log only own logs-->
    <logger name="Microsoft.*" minlevel="Trace" writeTo="blackhole" final="true" />
    <logger name="Hangfire.*" maxlevel="Warn" writeTo="blackhole" final="true" />
    <logger name="ASP.global_asax*" minlevel="Trace" writeTo="bufferedWrapper_JsonGlobalAsax" final="true" />
    <logger name="*" minlevel="Trace" writeTo="bufferedWrapper_JsonLogger" />
    <!--<logger name="LogApiRequest.Core.LogApiRequestMiddleware" minlevel="Trace" writeTo="WebServicesRequestLogs" final="true" />-->
  </rules>
</nlog>